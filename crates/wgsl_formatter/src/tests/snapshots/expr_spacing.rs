use expect_test::expect;

use crate::test_util::check;

#[test]
pub fn format_infix_expr_very_long_let_statement() {
    check(
        "fn main() {
        let a = 111111111111111111111 + 2222222222222222222222222 + 3333333333333333333333333333 + 4444444444444444444444 + 555555555555555555555 + 666666666666666666666666 + 777777777777777777777 + 88888888888888888888 + 999999999999999999999;
        }",
        expect![["
            fn main() {
                let a = 111111111111111111111 + 2222222222222222222222222
                     + 3333333333333333333333333333 + 4444444444444444444444
                     + 555555555555555555555 + 666666666666666666666666
                     + 777777777777777777777 + 88888888888888888888 + 999999999999999999999;
            }
        "]],
    );
}

#[test]
pub fn format_infix_grouping_in_very_long_let_statement() {
    // a: The lines get split up between the short number groupings, as our control.
    // b: Now the short number groupings are within parens and should have a lower precedence of being split up
    // c: But if the short number groupings would be too long, they again get split up.
    check(
        "fn main() {
        let a = 111111111111111111111 + 2222222222222222222222222 + 333333333333333333333333333333 +  44444444444444 +                    55555555555 +                       66666666666666  + 777777777777777777777 + 88888888888888888888 + 999999999999999999999;
        let b = 111111111111111111111 + 2222222222222222222222222 + 333333333333333333333333333333 + (44444444444444 +                    55555555555 +                       66666666666666) + 777777777777777777777 + 88888888888888888888 + 999999999999999999999;
        let c = 111111111111111111111 + 2222222222222222222222222 + 333333333333333333333333333333 + (444444444444444444444444444444444 + 555555555555555555555555555555555 + 666666666666666666666666666666666666) + 777777777777777777777 + 88888888888888888888 + 999999999999999999999;
        }",
        expect![[r#"
            fn main() {
                let a = 111111111111111111111 + 2222222222222222222222222
                     + 333333333333333333333333333333 + 44444444444444 + 55555555555
                     + 66666666666666 + 777777777777777777777 + 88888888888888888888
                     + 999999999999999999999;
                let b = 111111111111111111111 + 2222222222222222222222222
                     + 333333333333333333333333333333
                     + (44444444444444 + 55555555555 + 66666666666666)
                     + 777777777777777777777 + 88888888888888888888 + 999999999999999999999;
                let c = 111111111111111111111 + 2222222222222222222222222
                     + 333333333333333333333333333333
                     + (444444444444444444444444444444444
                         + 555555555555555555555555555555555
                         + 666666666666666666666666666666666666) + 777777777777777777777
                     + 88888888888888888888 + 999999999999999999999;
            }
        "#]],
    );
}
